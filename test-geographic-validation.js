const { findExactLocation, calculateDistance, loadGuineaGeography } = require('./server/middleware/geographicValidation');

// Test avec les coordonn√©es de Lab√©
const testCoordinates = [
  { lat: 11.3182, lon: -12.2833, name: 'Lab√©-Centre' },
  { lat: 11.3182, lon: -12.2833, name: 'Lab√© (quartier Tata)' },
  { lat: 11.3, lon: -12.3, name: 'Lab√© (approximatif)' },
  { lat: 9.6412, lon: -13.5784, name: 'Conakry' },
  { lat: 10.0569, lon: -12.8657, name: 'Kindia' }
];

console.log('=== Test de validation g√©ographique ===\n');

const geographyData = loadGuineaGeography();
if (!geographyData) {
  console.error('‚ùå Impossible de charger les donn√©es g√©ographiques');
  process.exit(1);
}

console.log('‚úÖ Donn√©es g√©ographiques charg√©es avec succ√®s');
console.log(`üìä ${geographyData.Guin√©e.R√©gions.length} r√©gions trouv√©es\n`);

testCoordinates.forEach(({ lat, lon, name }) => {
  console.log(`üìç Test: ${name} (${lat}, ${lon})`);
  
  const location = findExactLocation(lat, lon, geographyData);
  
  if (location) {
    console.log(`‚úÖ Localisation trouv√©e:`);
    console.log(`   R√©gion: ${location.region}`);
    console.log(`   Pr√©fecture: ${location.prefecture}`);
    console.log(`   Commune: ${location.commune}`);
    console.log(`   Distance: ${location.distance.toFixed(2)} km`);
  } else {
    console.log(`‚ùå Aucune localisation trouv√©e`);
  }
  
  console.log('');
});

console.log('=== Test termin√© ==='); 